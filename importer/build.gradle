plugins {
    id 'org.jetbrains.kotlin.jvm'
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.6.10'
}

group 'com.edelweiss.software.tailnumber.server'

dependencies {
    implementation 'com.google.guava:guava:31.1-jre'
    api 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.1'

    // Cassandra
    implementation "com.datastax.oss:java-driver-core:$datastax_version"
    implementation "com.datastax.oss:java-driver-query-builder:$datastax_version"
//    implementation "com.datastax.oss:java-driver-mapper-runtime:$datastax_version"

    // HTTP
    implementation "com.github.kittinunf.fuel:fuel:$fuel_version"
    implementation "com.github.kittinunf.fuel:fuel-kotlinx-serialization:$fuel_version"

    // Injection
    implementation "io.insert-koin:koin-ktor:$koin_version"
    implementation "io.insert-koin:koin-logger-slf4j:$koin_version"

    // HTML parsing
//    implementation 'org.jsoup:jsoup:1.14.3'
    implementation 'org.apache.commons:commons-text:1.9'

    // tar.gz / zip
    implementation 'org.apache.commons:commons-compress:1.21'

    implementation project(':common')
    implementation project(':search')
    implementation project(':registries')
    implementation project(':core')
}

test {
    useJUnitPlatform()
}

task importFaa(type: JavaExec) {
    main = 'com.edelweiss.software.tailnumber.server.importer.faa.FaaRegistrationImporterKt'
    classpath = sourceSets.main.runtimeClasspath
}

task exportToCassandra(type: JavaExec) {
    main = 'com.edelweiss.software.tailnumber.server.importer.cassandra.CassandraExporterKt'
    classpath = sourceSets.main.runtimeClasspath
}

task exportToElasticSearch(type: JavaExec) {
    main = 'com.edelweiss.software.tailnumber.server.importer.elastic.ElasticExporterKt'
    classpath = sourceSets.main.runtimeClasspath
}